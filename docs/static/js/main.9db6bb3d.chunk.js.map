{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","Horario","props","partidas","map","partida","index","react_default","a","createElement","className","key","hora","variação","Linha","horários","horário","nome","Linhas","linhas","linha","partidaPadrão","HomePage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","state","e","setState","filter","toLowerCase","value","target","includes","role","aria-label","type","placeholder","onChange","href","rel","style","textDecoration","React","Component","ReactDOM","render","src_HomePage","inicio","termino","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9db6bb3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction Horario(props) {\n  const partidas = props.partidas.map((partida, index) => {\n      return (\n        <span className='border rounded m-1' key={index}>\n          {partida.hora} \n          {/*<small>\n            {partida.inicio ? ' (Partida: ' + partida.inicio + ')': ''}\n            {partida.termino ? ' (Recolhimento: ' + partida.termino + ')': ''}\n          </small>*/}\n        </span>\n      );\n    });\n\n  return (\n    <div>\n      <h6>{props.variação}</h6>\n      <div className='d-flex flex-wrap'>{partidas}</div>\n    </div>\n   );\n}\n\nfunction Linha(props) {\n  const horários = props.horários.map((horário) => {\n    return (<Horario key={horário.variação} \n                     variação={horário.variação}\n                     partidas={horário.partidas} />);\n  });\n\n  return (\n    <div className='card card-body my-2'>\n      <h5 className='card-title mb-0'>{props.nome}</h5>\n      <div className='card-text'>\n        {/*<div><strong>Partida padrão:</strong> {props.partidaPadrão}</div>*/}\n        {horários}\n      </div>\n    </div>\n   );\n}\n\nfunction Linhas(props) {\n  const linhas = props.linhas.map((linha) => {\n    return (<Linha key={linha.nome} \n                   nome={linha.nome}\n                   partidaPadrão={linha.partidaPadrão}\n                   horários={linha.horários} />);\n  })\n\n  return (<div>{linhas}</div>);\n}\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { linhas: props.linhas, };\n  }\n\n  handleChange(e) {\n    this.setState({\n      linhas: this.props.linhas.filter(linha => {\n        let nome = linha.nome.toLowerCase();\n        let value = e.target.value.toLowerCase();\n        \n        return nome.includes(value);\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <div className='h-100'>\n        <header>\n          <nav className='navbar navbar-dark bg-primary'>\n            <div className='navbar-brand'>\n                <span role='img' aria-label='Ô'>🚍</span>\n                nibus Meu\n            </div>\n            <form className='form-inline col-6 col-sm-auto p-0'>\n              <input className='form-control' \n                     type='search' \n                     placeholder='Sua linha 🔎'\n                     onChange={this.handleChange}\n                     />\n            </form>\n          </nav>\n        </header>\n        <main className='container my-2'>\n          <Linhas linhas={this.state.linhas} />\n        </main>\n        <footer className='bg-primary' >\n          <div className='container text-light text-center'>\n          {'Desenvolvido por '}\n          <a className='text-light' \n             href='https://gleiderr.github.io' \n             rel='noopener noreferrer' \n             target='_blank' \n             style={{'textDecoration': 'underline'}}>\n            Gleider Costa\n          </a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nconst linhas = [\n  {\n    nome: '5800 - Caieiras',\n    partidaPadrão: 'Terminal Morro Alto',\n    horários: [\n      {\n        variação: 'Dia Útil',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '04:30'},\n          { hora: '04:40'},\n          { hora: '04:50', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:10', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:30'}, { hora: '05:45'}, { hora: '06:00'}, { hora: '06:20'},\n          { hora: '06:35'}, { hora: '06:50'}, { hora: '07:35'}, { hora: '07:55'},\n          { hora: '08:15'}, { hora: '08:45'}, { hora: '09:15'}, { hora: '09:45'},\n          { hora: '10:15'}, { hora: '10:45'}, { hora: '11:15'}, { hora: '11:45'},\n          { hora: '12:25'}, { hora: '12:45'}, { hora: '13:10'}, \n          { hora: '13:25'},\n          { hora: '13:45'},\n          { hora: '14:05'},\n          { hora: '14:25'},\n          { hora: '14:45'},\n          { hora: '15:05'},\n          { hora: '15:20'},\n          { hora: '15:35'},\n          { hora: '15:50'},\n          { hora: '16:10'},\n          { hora: '16:20'},\n          { hora: '16:30'},\n          { hora: '16:50'},\n          { hora: '17:00'},\n          { hora: '17:20'},\n          { hora: '17:35'},\n          { hora: '17:50'},\n          { hora: '18:05'},\n          { hora: '18:20'},\n          { hora: '18:35', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:50'},\n          { hora: '19:10'},\n          { hora: '19:30'},\n          { hora: '19:50'},\n          { hora: '20:10'},\n          { hora: '20:30'},\n          { hora: '20:50', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '21:25'},\n          { hora: '22:00'},\n          { hora: '22:35'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Sábado',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '05:05'},\n          { hora: '05:35'},\n          { hora: '06:20'},\n          { hora: '06:40'},\n          { hora: '07:05'},\n          { hora: '07:35'},\n          { hora: '08:25'},\n          { hora: '08:45'},\n          { hora: '09:05'},\n          { hora: '09:35'},\n          { hora: '10:05'},\n          { hora: '10:35'},\n          { hora: '11:05'},\n          { hora: '11:55'},\n          { hora: '12:35'},\n          { hora: '13:15'},\n          { hora: '13:55'},\n          { hora: '14:35'},\n          { hora: '15:15'},\n          { hora: '15:55'},\n          { hora: '16:35'},\n          { hora: '17:15'},\n          { hora: '17:55'},\n          { hora: '18:20'},\n          { hora: '18:45'},\n          { hora: '19:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '19:35'},\n          { hora: '20:05'},\n          { hora: '20:35'},\n          { hora: '21:25'},\n          { hora: '22:25'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Domingos e Feriados',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:30'},\n          { hora: '05:00'},\n          { hora: '05:30'},\n          { hora: '06:00'},\n          { hora: '06:30'},\n          { hora: '07:00'},\n          { hora: '07:45'},\n          { hora: '08:45'},\n          { hora: '09:45'},\n          { hora: '10:55'},\n          { hora: '11:55'},\n          { hora: '12:55'},\n          { hora: '13:55'},\n          { hora: '14:55'},\n          { hora: '15:55'},\n          { hora: '16:55'},\n          { hora: '17:55', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:55'},\n          { hora: '19:55'},\n          { hora: '20:55'},\n          { hora: '22:15'},\n          { hora: '23:25', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n    ]\n  },/*{\n    nome: '5805 - Célvia',\n    partidaPadrão: 'Terminal Morro Alto',\n    horários: [\n      {\n        variação: 'Dia Útil',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '04:30'},\n          { hora: '04:40'},\n          { hora: '04:50', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:10', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:30'}, { hora: '05:45'}, { hora: '06:00'}, { hora: '06:20'},\n          { hora: '06:35'}, { hora: '06:50'}, { hora: '07:35'}, { hora: '07:55'},\n          { hora: '08:15'}, { hora: '08:45'}, { hora: '09:15'}, { hora: '09:45'},\n          { hora: '10:15'}, { hora: '10:45'}, { hora: '11:15'}, { hora: '11:45'},\n          { hora: '12:25'}, { hora: '12:45'}, { hora: '13:10'}, \n          { hora: '13:25'},\n          { hora: '13:45'},\n          { hora: '14:05'},\n          { hora: '14:25'},\n          { hora: '14:45'},\n          { hora: '15:05'},\n          { hora: '15:20'},\n          { hora: '15:35'},\n          { hora: '15:50'},\n          { hora: '16:10'},\n          { hora: '16:20'},\n          { hora: '16:30'},\n          { hora: '16:50'},\n          { hora: '17:00'},\n          { hora: '17:20'},\n          { hora: '17:35'},\n          { hora: '17:50'},\n          { hora: '18:05'},\n          { hora: '18:20'},\n          { hora: '18:35', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:50'},\n          { hora: '19:10'},\n          { hora: '19:30'},\n          { hora: '19:50'},\n          { hora: '20:10'},\n          { hora: '20:30'},\n          { hora: '20:50', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '21:25'},\n          { hora: '22:00'},\n          { hora: '22:35'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Sábado',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '05:05'},\n          { hora: '05:35'},\n          { hora: '06:20'},\n          { hora: '06:40'},\n          { hora: '07:05'},\n          { hora: '07:35'},\n          { hora: '08:25'},\n          { hora: '08:45'},\n          { hora: '09:05'},\n          { hora: '09:35'},\n          { hora: '10:05'},\n          { hora: '10:35'},\n          { hora: '11:05'},\n          { hora: '11:55'},\n          { hora: '12:35'},\n          { hora: '13:15'},\n          { hora: '13:55'},\n          { hora: '14:35'},\n          { hora: '15:15'},\n          { hora: '15:55'},\n          { hora: '16:35'},\n          { hora: '17:15'},\n          { hora: '17:55'},\n          { hora: '18:20'},\n          { hora: '18:45'},\n          { hora: '19:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '19:35'},\n          { hora: '20:05'},\n          { hora: '20:35'},\n          { hora: '21:25'},\n          { hora: '22:25'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Domingos e Feriados',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:30'},\n          { hora: '05:00'},\n          { hora: '05:30'},\n          { hora: '06:00'},\n          { hora: '06:30'},\n          { hora: '07:00'},\n          { hora: '07:45'},\n          { hora: '08:45'},\n          { hora: '09:45'},\n          { hora: '10:55'},\n          { hora: '11:55'},\n          { hora: '12:55'},\n          { hora: '13:55'},\n          { hora: '14:55'},\n          { hora: '15:55'},\n          { hora: '16:55'},\n          { hora: '17:55', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:55'},\n          { hora: '19:55'},\n          { hora: '20:55'},\n          { hora: '22:15'},\n          { hora: '23:25', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n    ]\n  },{\n    nome: '5830 - Vale Formoso',\n    partidaPadrão: 'Terminal Morro Alto',\n    horários: [\n      {\n        variação: 'Dia Útil',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '04:30'},\n          { hora: '04:40'},\n          { hora: '04:50', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:10', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:30'}, { hora: '05:45'}, { hora: '06:00'}, { hora: '06:20'},\n          { hora: '06:35'}, { hora: '06:50'}, { hora: '07:35'}, { hora: '07:55'},\n          { hora: '08:15'}, { hora: '08:45'}, { hora: '09:15'}, { hora: '09:45'},\n          { hora: '10:15'}, { hora: '10:45'}, { hora: '11:15'}, { hora: '11:45'},\n          { hora: '12:25'}, { hora: '12:45'}, { hora: '13:10'}, \n          { hora: '13:25'},\n          { hora: '13:45'},\n          { hora: '14:05'},\n          { hora: '14:25'},\n          { hora: '14:45'},\n          { hora: '15:05'},\n          { hora: '15:20'},\n          { hora: '15:35'},\n          { hora: '15:50'},\n          { hora: '16:10'},\n          { hora: '16:20'},\n          { hora: '16:30'},\n          { hora: '16:50'},\n          { hora: '17:00'},\n          { hora: '17:20'},\n          { hora: '17:35'},\n          { hora: '17:50'},\n          { hora: '18:05'},\n          { hora: '18:20'},\n          { hora: '18:35', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:50'},\n          { hora: '19:10'},\n          { hora: '19:30'},\n          { hora: '19:50'},\n          { hora: '20:10'},\n          { hora: '20:30'},\n          { hora: '20:50', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '21:25'},\n          { hora: '22:00'},\n          { hora: '22:35'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Sábado',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '05:05'},\n          { hora: '05:35'},\n          { hora: '06:20'},\n          { hora: '06:40'},\n          { hora: '07:05'},\n          { hora: '07:35'},\n          { hora: '08:25'},\n          { hora: '08:45'},\n          { hora: '09:05'},\n          { hora: '09:35'},\n          { hora: '10:05'},\n          { hora: '10:35'},\n          { hora: '11:05'},\n          { hora: '11:55'},\n          { hora: '12:35'},\n          { hora: '13:15'},\n          { hora: '13:55'},\n          { hora: '14:35'},\n          { hora: '15:15'},\n          { hora: '15:55'},\n          { hora: '16:35'},\n          { hora: '17:15'},\n          { hora: '17:55'},\n          { hora: '18:20'},\n          { hora: '18:45'},\n          { hora: '19:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '19:35'},\n          { hora: '20:05'},\n          { hora: '20:35'},\n          { hora: '21:25'},\n          { hora: '22:25'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Domingos e Feriados',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:30'},\n          { hora: '05:00'},\n          { hora: '05:30'},\n          { hora: '06:00'},\n          { hora: '06:30'},\n          { hora: '07:00'},\n          { hora: '07:45'},\n          { hora: '08:45'},\n          { hora: '09:45'},\n          { hora: '10:55'},\n          { hora: '11:55'},\n          { hora: '12:55'},\n          { hora: '13:55'},\n          { hora: '14:55'},\n          { hora: '15:55'},\n          { hora: '16:55'},\n          { hora: '17:55', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:55'},\n          { hora: '19:55'},\n          { hora: '20:55'},\n          { hora: '22:15'},\n          { hora: '23:25', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n    ]\n  },{\n    nome: '5835 - Vista Alegre',\n    partidaPadrão: 'Terminal Morro Alto',\n    horários: [\n      {\n        variação: 'Dia Útil',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '04:30'},\n          { hora: '04:40'},\n          { hora: '04:50', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:10', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:30'}, { hora: '05:45'}, { hora: '06:00'}, { hora: '06:20'},\n          { hora: '06:35'}, { hora: '06:50'}, { hora: '07:35'}, { hora: '07:55'},\n          { hora: '08:15'}, { hora: '08:45'}, { hora: '09:15'}, { hora: '09:45'},\n          { hora: '10:15'}, { hora: '10:45'}, { hora: '11:15'}, { hora: '11:45'},\n          { hora: '12:25'}, { hora: '12:45'}, { hora: '13:10'}, \n          { hora: '13:25'},\n          { hora: '13:45'},\n          { hora: '14:05'},\n          { hora: '14:25'},\n          { hora: '14:45'},\n          { hora: '15:05'},\n          { hora: '15:20'},\n          { hora: '15:35'},\n          { hora: '15:50'},\n          { hora: '16:10'},\n          { hora: '16:20'},\n          { hora: '16:30'},\n          { hora: '16:50'},\n          { hora: '17:00'},\n          { hora: '17:20'},\n          { hora: '17:35'},\n          { hora: '17:50'},\n          { hora: '18:05'},\n          { hora: '18:20'},\n          { hora: '18:35', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:50'},\n          { hora: '19:10'},\n          { hora: '19:30'},\n          { hora: '19:50'},\n          { hora: '20:10'},\n          { hora: '20:30'},\n          { hora: '20:50', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '21:25'},\n          { hora: '22:00'},\n          { hora: '22:35'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Sábado',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '05:05'},\n          { hora: '05:35'},\n          { hora: '06:20'},\n          { hora: '06:40'},\n          { hora: '07:05'},\n          { hora: '07:35'},\n          { hora: '08:25'},\n          { hora: '08:45'},\n          { hora: '09:05'},\n          { hora: '09:35'},\n          { hora: '10:05'},\n          { hora: '10:35'},\n          { hora: '11:05'},\n          { hora: '11:55'},\n          { hora: '12:35'},\n          { hora: '13:15'},\n          { hora: '13:55'},\n          { hora: '14:35'},\n          { hora: '15:15'},\n          { hora: '15:55'},\n          { hora: '16:35'},\n          { hora: '17:15'},\n          { hora: '17:55'},\n          { hora: '18:20'},\n          { hora: '18:45'},\n          { hora: '19:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '19:35'},\n          { hora: '20:05'},\n          { hora: '20:35'},\n          { hora: '21:25'},\n          { hora: '22:25'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Domingos e Feriados',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:30'},\n          { hora: '05:00'},\n          { hora: '05:30'},\n          { hora: '06:00'},\n          { hora: '06:30'},\n          { hora: '07:00'},\n          { hora: '07:45'},\n          { hora: '08:45'},\n          { hora: '09:45'},\n          { hora: '10:55'},\n          { hora: '11:55'},\n          { hora: '12:55'},\n          { hora: '13:55'},\n          { hora: '14:55'},\n          { hora: '15:55'},\n          { hora: '16:55'},\n          { hora: '17:55', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:55'},\n          { hora: '19:55'},\n          { hora: '20:55'},\n          { hora: '22:15'},\n          { hora: '23:25', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n    ]\n  },{\n    nome: '5850 - Bairro Jane',\n    partidaPadrão: 'Terminal Morro Alto',\n    horários: [\n      {\n        variação: 'Dia Útil',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '04:30'},\n          { hora: '04:40'},\n          { hora: '04:50', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:00', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:10', inicio:'Rua Paulo Ferreira da Costa'},\n          { hora: '05:30'}, { hora: '05:45'}, { hora: '06:00'}, { hora: '06:20'},\n          { hora: '06:35'}, { hora: '06:50'}, { hora: '07:35'}, { hora: '07:55'},\n          { hora: '08:15'}, { hora: '08:45'}, { hora: '09:15'}, { hora: '09:45'},\n          { hora: '10:15'}, { hora: '10:45'}, { hora: '11:15'}, { hora: '11:45'},\n          { hora: '12:25'}, { hora: '12:45'}, { hora: '13:10'}, \n          { hora: '13:25'},\n          { hora: '13:45'},\n          { hora: '14:05'},\n          { hora: '14:25'},\n          { hora: '14:45'},\n          { hora: '15:05'},\n          { hora: '15:20'},\n          { hora: '15:35'},\n          { hora: '15:50'},\n          { hora: '16:10'},\n          { hora: '16:20'},\n          { hora: '16:30'},\n          { hora: '16:50'},\n          { hora: '17:00'},\n          { hora: '17:20'},\n          { hora: '17:35'},\n          { hora: '17:50'},\n          { hora: '18:05'},\n          { hora: '18:20'},\n          { hora: '18:35', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:50'},\n          { hora: '19:10'},\n          { hora: '19:30'},\n          { hora: '19:50'},\n          { hora: '20:10'},\n          { hora: '20:30'},\n          { hora: '20:50', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '21:25'},\n          { hora: '22:00'},\n          { hora: '22:35'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Sábado',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '05:05'},\n          { hora: '05:35'},\n          { hora: '06:20'},\n          { hora: '06:40'},\n          { hora: '07:05'},\n          { hora: '07:35'},\n          { hora: '08:25'},\n          { hora: '08:45'},\n          { hora: '09:05'},\n          { hora: '09:35'},\n          { hora: '10:05'},\n          { hora: '10:35'},\n          { hora: '11:05'},\n          { hora: '11:55'},\n          { hora: '12:35'},\n          { hora: '13:15'},\n          { hora: '13:55'},\n          { hora: '14:35'},\n          { hora: '15:15'},\n          { hora: '15:55'},\n          { hora: '16:35'},\n          { hora: '17:15'},\n          { hora: '17:55'},\n          { hora: '18:20'},\n          { hora: '18:45'},\n          { hora: '19:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '19:35'},\n          { hora: '20:05'},\n          { hora: '20:35'},\n          { hora: '21:25'},\n          { hora: '22:25'},\n          { hora: '23:10', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '23:45', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n      {\n        variação: 'Domingos e Feriados',\n        partidas: [\n          { hora: '00:30'},\n          { hora: '01:50'},\n          { hora: '03:10'},\n          { hora: '04:30'},\n          { hora: '05:00'},\n          { hora: '05:30'},\n          { hora: '06:00'},\n          { hora: '06:30'},\n          { hora: '07:00'},\n          { hora: '07:45'},\n          { hora: '08:45'},\n          { hora: '09:45'},\n          { hora: '10:55'},\n          { hora: '11:55'},\n          { hora: '12:55'},\n          { hora: '13:55'},\n          { hora: '14:55'},\n          { hora: '15:55'},\n          { hora: '16:55'},\n          { hora: '17:55', termino:'Rua Paulo Ferreira da Costa'},\n          { hora: '18:55'},\n          { hora: '19:55'},\n          { hora: '20:55'},\n          { hora: '22:15'},\n          { hora: '23:25', termino:'Rua Paulo Ferreira da Costa'},\n        ],\n      },\n    ]\n  },*/\n];\n\nReactDOM.render(<HomePage linhas={linhas}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}